// Code generated by wunderctl. DO NOT EDIT.

import type { GraphQLError } from "@wundergraph/sdk/client";

export type JSONValue = string | number | boolean | JSONObject | Array<JSONValue>;

export type JSONObject = { [key: string]: JSONValue };

export interface CreateApiLimitInput {
	userId: string;
	count: number;
}

export interface CreateSubscriptionInput {
	userId: string;
	stripeCustomerId?: string;
	stripeSubscriptionId?: string;
	stripePriceId?: string;
	stripeCurrentPeriodEnd?: string;
}

export interface DeleteApiLimitInput {
	id: string;
}

export interface DeleteSubscriptionInput {
	id: string;
}

export interface GetUserApiLimitInput {
	userId: string;
}

export interface GetUserSubscriptionInput {
	userId: string;
}

export interface UpdateApiLimitInput {
	id: string;
	count: number;
}

export interface UpdateSubscriptionInput {
	id: string;
	stripeCustomerId?: string;
	stripeSubscriptionId?: string;
	stripePriceId?: string;
	stripeCurrentPeriodEnd?: string;
}

export interface CreateApiLimitInputInternal {
	userId: string;
	count: number;
}

export interface CreateSubscriptionInputInternal {
	userId: string;
	stripeCustomerId?: string;
	stripeSubscriptionId?: string;
	stripePriceId?: string;
	stripeCurrentPeriodEnd?: string;
}

export interface DeleteApiLimitInputInternal {
	id: string;
}

export interface DeleteSubscriptionInputInternal {
	id: string;
}

export interface GetUserApiLimitInputInternal {
	userId: string;
}

export interface GetUserSubscriptionInputInternal {
	userId: string;
}

export interface UpdateApiLimitInputInternal {
	id: string;
	count: number;
}

export interface UpdateSubscriptionInputInternal {
	id: string;
	stripeCustomerId?: string;
	stripeSubscriptionId?: string;
	stripePriceId?: string;
	stripeCurrentPeriodEnd?: string;
}

export interface CreateApiLimitInputInjected {
	userId: string;
	count: number;
}

export interface CreateSubscriptionInputInjected {
	userId: string;
	stripeCustomerId?: string;
	stripeSubscriptionId?: string;
	stripePriceId?: string;
	stripeCurrentPeriodEnd?: string;
}

export interface DeleteApiLimitInputInjected {
	id: string;
}

export interface DeleteSubscriptionInputInjected {
	id: string;
}

export interface GetUserApiLimitInputInjected {
	userId: string;
}

export interface GetUserSubscriptionInputInjected {
	userId: string;
}

export interface UpdateApiLimitInputInjected {
	id: string;
	count: number;
}

export interface UpdateSubscriptionInputInjected {
	id: string;
	stripeCustomerId?: string;
	stripeSubscriptionId?: string;
	stripePriceId?: string;
	stripeCurrentPeriodEnd?: string;
}

export interface CreateApiLimitResponse {
	data?: CreateApiLimitResponseData;
	errors?: GraphQLError[];
}

export interface CreateSubscriptionResponse {
	data?: CreateSubscriptionResponseData;
	errors?: GraphQLError[];
}

export interface DeleteApiLimitResponse {
	data?: DeleteApiLimitResponseData;
	errors?: GraphQLError[];
}

export interface DeleteSubscriptionResponse {
	data?: DeleteSubscriptionResponseData;
	errors?: GraphQLError[];
}

export interface GetUserApiLimitResponse {
	data?: GetUserApiLimitResponseData;
	errors?: GraphQLError[];
}

export interface GetUserSubscriptionResponse {
	data?: GetUserSubscriptionResponseData;
	errors?: GraphQLError[];
}

export interface UpdateApiLimitResponse {
	data?: UpdateApiLimitResponseData;
	errors?: GraphQLError[];
}

export interface UpdateSubscriptionResponse {
	data?: UpdateSubscriptionResponseData;
	errors?: GraphQLError[];
}

export interface CreateApiLimitResponseData {
	prisma_createOneUserApiLimit?: {
		id: string;
	};
}

export interface CreateSubscriptionResponseData {
	prisma_createOneUserSubscription?: {
		id: string;
	};
}

export interface DeleteApiLimitResponseData {
	prisma_deleteOneUserApiLimit?: {
		id: string;
	};
}

export interface DeleteSubscriptionResponseData {
	prisma_deleteOneUserSubscription?: {
		id: string;
	};
}

export interface GetUserApiLimitResponseData {
	apiLimit?: {
		id: string;
		userId: string;
		count: number;
		createdAt: string;
		updatedAt: string;
	};
}

export interface GetUserSubscriptionResponseData {
	subscription?: {
		id: string;
		userId: string;
		stripeCustomerId?: string;
		stripeSubscriptionId?: string;
		stripePriceId?: string;
		stripeCurrentPeriodEnd?: string;
	};
}

export interface UpdateApiLimitResponseData {
	prisma_updateOneUserApiLimit?: {
		id: string;
		count: number;
	};
}

export interface UpdateSubscriptionResponseData {
	prisma_updateOneUserSubscription?: {
		id: string;
	};
}
