// import { CodeIcon, ImageIcon, Pencil1Icon } from '@radix-ui/react-icons';
import Link from 'next/link';
import { Fragment, Suspense } from 'react';
import { Button, ReaderIcon, Skeleton } from 'ui';
import { Card, CardContent, CardFooter, CardHeader, CardTitle } from 'ui';

import { allUseCases, UseCase as UseCaseType } from '@/.contentlayer/generated';
import { Container } from '@/components/container';
import { FadeIn, FadeInStagger } from '@/components/fade-in';
import { GridList, GridListItemGroup } from '@/components/grid-list';
import { SectionIntro } from '@/components/section-intro';

import UseCaseIcon from '../use-cases/use-case-icon';

function UseCase({
  description,
  slug,
  icon: Icon,
  title,
  buttonText,
}: UseCaseType) {
  return (
    <Fragment>
      <FadeIn className="flex">
        <Link href={`/use-cases/${slug}`}>
          <Card className="flex h-full flex-col justify-between p-6 transition hover:bg-muted sm:p-8">
            <CardHeader className="flex flex-col justify-between">
              <UseCaseIcon iconName={Icon} />
              <CardTitle className="font-display text-2xl font-semibold text-foreground">
                {title}
              </CardTitle>
            </CardHeader>
            <CardContent className="mt-4 text-base text-muted-foreground">
              {description}
            </CardContent>
            <CardFooter>
              <Button
                variant="outline"
                className="mt-4 w-full justify-between font-bold"
              >
                {buttonText}
                <ReaderIcon className="ml-2 h-4 w-4 justify-end" />
              </Button>
            </CardFooter>
          </Card>
        </Link>
      </FadeIn>
    </Fragment>
  );
}

function UseCaseLoader() {
  return (
    <Skeleton className="flex h-64 flex-col justify-between rounded p-6 transition hover:bg-muted sm:p-8" />
  );
}

export default function UseCases() {
  const gridItems = [
    {
      title: 'Level up creativity',
      children: 'Their imagination is supercharged by AI, not replaced by it',
      buttonText: 'Read how to level up',
    },
    {
      title: 'Watch their backs',
      children: 'They keep the entire process private and protect their IP',
      buttonText: 'Read how to level up',
    },
    {
      title: 'Boost their earnings',
      children:
        'Discover new revenue streams while safeguarding their content with blockchain technology',
      buttonText: 'Read how to level up',
    },
    {
      title: 'Deepen connections',
      children:
        'They dazzle audiences craving human touch in a sea of AI clutter and monotony',
      buttonText: 'Read how to level up',
    },
    {
      title: 'Ship better, often',
      children:
        'They offer quality products and code in an assembly line world',
      buttonText: 'Read how to level up',
    },
    {
      title: 'Tap into awesome',
      children:
        "Their unique creativity is what AI can't replicate. The world needs their originality",
      buttonText: 'Read how to level up',
    },
  ];

  return (
    <>
      <SectionIntro
        title="By 2026, most of the content on the web will be generated by AI"
        className="mt-24 text-foreground sm:mt-32 lg:mt-40"
      >
        <p className="text-muted-foreground">
          And Voila AI helps visionaries like you make the synthetic world
          ahead, less boring.
        </p>
        <h3 className="mt-16 font-display text-2xl font-semibold">
          See how creators are using it to:
        </h3>
      </SectionIntro>
      <Container className="mt-16">
        <GridList>
          <GridListItemGroup items={gridItems} />
        </GridList>
      </Container>
      <Container className="mt-16">
        <h2 className="my-16 font-display text-2xl font-semibold">
          Check out some Use Cases:
        </h2>
        <FadeInStagger className="grid grid-cols-1 gap-8 lg:grid-cols-3">
          <Suspense fallback={<UseCaseLoader />}>
            {allUseCases.slice(0, 3).map((props) => (
              <UseCase key={props._id} {...props} />
            ))}
          </Suspense>
        </FadeInStagger>
      </Container>
    </>
  );
}
